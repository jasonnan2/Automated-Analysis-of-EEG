%% Climate luckydoor Main analysis
% Jason Nan
% 12/19/2023
clear all;close all;clc
cd('C:\Users\jason\OneDrive\Desktop\MS Beng\Neatlabs\Climate_LuckyDoor')
addpath('scripts')
addpath('A:\eeglab_OldLSL_DataAna04072023')
eeglab
%% Main Analysis with Class
% Create an object of the class
dataPath='A:/ClimateLD/analysis_results/ClimateLD_allgroups_amp_rmv.mat';
load(dataPath)
variables = {'EVgain', 'EVloss', 'GLbias'};
baselineTime=[-250 -50];

analysis = ERPanalysis_struct(CLIMATELD); % set up the class, need filepath of group data, variables to run and baseline correction range
analysis = analysis.cleanDatasets(); % remove any missing subjects
analysis = analysis.standardPipeline(baselineTime); % standard processing pipeline, 5SD outlier, baseline correction

%%

% choice 0-500
% immediate reward 500-1000
% cum reward 1000-1500

timeRange.choice=[0 500];
timeRange.imReward=[500 1000];
timeRange.cumReward=[1000 1500];
Vars2Plot={'EVgain'};
analysis = analysis.plotERP(timeRange,Vars2Plot);
%%
varSets = {
'EVgain-beta-cumReward-C3-FC3-FP2',
'EVgain-alpha-cumReward-CPz',

'EVgain-theta-imreward-P3',
'EVgain-alpha-imReward-CPz-C3-F7',
'EVgain-beta-imReward-C3-FC3-FP2',

'EVgain-beta-choice-C3',
'EVgain-alpha-choice-F7-P7-O1',
'EVgain-theta-choice-FC3'}  

%topoplot(zeros(1,24),chanlocs_str,'headrad','rim','electrodes','labels'); 
%%

vars2plot={'EVgain'};
freq2plot={'theta','alpha','beta'};
times2plot={'choice','imReward','cumReward'};

function plotERP(obj,
N=numel(fieldnames(obj.DATA));
timeNames = fieldnames(timeRange);
sigElectrodes=analysis.analysisResults.sigElectrodes;
for p=1:length(vars2plot)
    property=vars2plot{p};
    time_list = intersect(fieldnames(sigElectrodes.(property)),times2plot);
    
    for t=1:length(time_list)
        
        time=time_list{t};
        sig=sigElectrodes.(property).(time);
        [~,~,ib] = intersect(fieldnames(sig),freq2plot);
        freq_list=freq2plot(sort(ib));
        
        % get longest electrode map
        maxLength = 0;
        for i = 1:length(freq_list)
            currentLength = length(sig.(freq_list{i}));  % Get the length of the current cell array
            if currentLength > maxLength
                maxLength = currentLength;  % Update the maximum length
            end
        end

        if ~isempty(freq_list)
            figure
            for f=1:length(freq_list)
                
                for c=1:length(sig.(freq_list{f}))
                    
                    subplot(length(freq_list),maxLength,(f-1)*maxLength+c)
                    
                    freq=freq_list{f};
                    chan=sig.(freq){c};
                    freqIdx = find(strcmp(obj.info.freq_list, freq));
                    timeIdx = obj.info.timeIDX.(time);
                    elecIdxs = find(strcmp({obj.info.chanlocs.labels},chan ));
                    data=[];
                    for n=1:N
                        data(:,n) = squeeze(nanmean(obj.DATA.(obj.info.groupNames{n}).(property)(freqIdx,elecIdxs,timeIdx(1):timeIdx(2),:),4));
                    end

                    plot(obj.info.timeAxis(timeIdx(1):timeIdx(2)),data)
                    title(chan)
                    if c==1
                        ylabel(freq,'fontweight','bold','fontsize',16)
                    end
                end
            end
            Lgnd = legend(groupNames);
            Lgnd.Position(1) = 0.7;
            Lgnd.Position(2) = 0.9;
            sgtitle(strcat(property,'-',time))
        end
    end
end

        
        
        
%%
function [metric,freqIdx,timeIdx,elecIdxs]=splitConditions(obj,varString)
    % Loop over each variable set
    % Split the variable set into its components
    components = split(varString, '-');
    metric = components{1};
    freq = components{2};
    time = components{3};
    elecs = components(4:end);

    % Find the indices of the components in the dataset
    freqIdx = find(strcmp(obj.info.freq_list, freq));
    timeIdx = obj.info.timeIDX.(time);
    elecIdxs = find(ismember({obj.info.chanlocs.labels}, elecs));
end
    
    
    
            