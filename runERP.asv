clear all;close all;clc
addpath('scripts')
addpath('scripts/DataAnalysis')
addpath('scripts/DataAnalysis/functions')
%% Loading in data and definitions
dataPath = '';
load(dataPath)
project.info.experimentalDesign='twoSample';

% Formatting behavior table for fitlm 
baseModel=""; % sepcify model for fitlm
tbl=readtable(); % read behavior table for neural behavior analysis

% Defining time in mS for baseline correction
baselineTime=[-250 -50];
% Defining time ranges of interest - replace 'time1' with whatever you want
timeRange=struct();
timeRange.time1=[0 500];
timeRange.time2=[500 1000];
timeRange.time3=[1000 1500];

% defining network for source localization - https://github.com/aojeda/dsi 
fpn=[5 6 55 66 59 60];netwrk(1).name='FPN';netwrk(1).roi=fpn;
con=[3 4 19 20 37 38 39 40 41 42 57 58 67 68];netwrk(2).name='CON';netwrk(2).roi=con;
admn=[11 12 25 26 29 30 53 54];netwrk(3).name='aDMN';netwrk(3).roi=admn;
pdmn=[15 16 21 22 51 52];netwrk(4).name='pDMN';netwrk(4).roi=pdmn;
mtldmn=[9 10 17 18 31 32 35 36 61 62 65 66 1];netwrk(5).name='mtlDMN';netwrk(5).roi=mtldmn;
vis=[7 8 13 14 23 24 27 28 43 44];netwrk(6).name='Visual';netwrk(6).roi=vis;
sm=[33 34 49 50 45 46];netwrk(7).name='SM';netwrk(7).roi=sm;
van=[2 47 48 63 64];netwrk(8).name='VAN';netwrk(8).roi=van;

%% Scalp Analysis
scalpObject=ScalpObject(project.scalpData, project.info, baselineTime, timeRange); % Initialize scalp processing
scalpObject = scalpObject.cleanDatasets(); % remove any missing subjects if any from Scalp data
scalpObject = scalpObject.standardProcessing(); % standard processing pipeline, 5SD outlier, baseline correction
scalpObject = scalpObject.ScalpAnalysis(); % calcualtes all significant electrodes between groups across all conditions
%%% Transforming data 
%func=@(x) abs(hilbert(x));
%scalpObject = scalpObject.applyFunc(func);

scalpObject = scalpObject.calSigTbl('sig'); % creating table of significant neural attributes

%% Scalp Plotting
close all
vars2plot={'exRareg'}; freq2plot={'theta','alpha','beta'}; times2plot={'choice','imReward','cumReward'}; errorType='sem'; chans2plot={'Pz'};
scalpObject.plotScalpMap('vars2plot',vars2plot,'freq2plot',freq2plot,'times2plot',times2plot,'combinations',[1,2]);
scalpObject.plotERPs('vars2plot',vars2plot,'freq2plot',freq2plot,'times2plot',times2plot)
scalpObject.plotScalpBar('vars2plot',vars2plot,'freq2plot',freq2plot,'times2plot',times2plot,'chans2plot',chans2plot)

%% Scalp Behavior Models
scalpObject = scalpObject.calSigTbl('sig'); % creating table of significant neural attributes

time_list=fieldnames(scalpObject.info.timeRange);
for t=1:length(time_list)
    tbldata = scalpObject.scalpResults.sigValues.exRareg.(time_list{t}); % get table data
    [~,tbldata] = calculate_group_means(tbldata, groups, append(time_list(t),'_',groupnames)); % only use newtable. If testing all, then use first output
    scalpObject.scalpResults.sigValues.exRareg.(time_list{t}) = tbldata;
end

 
% behavior and neural analysis
neuralVar={''}; % Specify here
baseModel=""; 
keyColumnName='Subject';
scalpObject=scalpObject.NeurBehMdl(neuralVar,behTbl,keyColumnName,baseModel,'ex_WS_RareG_linear');
baseModel="ex_WS_RareG ~ 1  + age+ group*"; keyColumnName='Subject';
scalpObject=scalpObject.NeurBehMdl(neuralVar,behTbl,keyColumnName,baseModel,'ex_WS_RareG_combo');
%scalpObject.neuralBehMdl.ex_WS_RareG_linear_exRareg = extractp(scalpObject.neuralBehMdl.ex_WS_RareG_linear_exRareg,'',0);
scalpObject.neuralBehMdl.ex_WS_RareG_combo_exRareg = extractp(scalpObject.neuralBehMdl.ex_WS_RareG_combo_exRareg,"group_Control:",1);
model=scalpObject.neuralBehMdl.ex_WS_RareG_combo_exRareg

%[p_fdr,p_masked]=fdr(scalpObject.neuralBehMdl.ex_WS_RareG_combo.('group_Control:neuralP'),0.05);
%scalpObject.neuralBehMdl.ex_WS_RareG_combo(find(p_masked),:)
%% FDR 

idx = contains(model.("ex_WS_RareG ~ 1  + age+ group*"),'_Pz')| contains(model.("ex_WS_RareG ~ 1  + age+ group*"),'P3') | contains(model.("ex_WS_RareG ~ 1  + age+ group*"),'P4') | contains(model.("ex_WS_RareG ~ 1  + age+ group*"),'POz');
idx2=idx & contains(model.("ex_WS_RareG ~ 1  + age+ group*"),'alpha')
%[p_fdr,p_masked]=fdr(scalpObject.neuralBehMdl.ex_WS_RareG_combo.('group_Control:neuralP'),0.05)
[p_fdr,p_masked]=fdr(cellfun(@coefTest,model(idx2,:).model),.05)
%% 
close all
figure
models=scalpObject.neuralBehMdl.ex_WS_RareG_combo_exRareg;
count=0;
for i=[8,29,19]
    count=count+1;
    subplot(1,3,count)
    plotAdjustedResponse(models.model{i},"exRareg_"+times2plot{count}+"_alpha_Pz")
    models.model{i}
    ylabel('ex WS RareG')
    xlabel(" alpha Pz")
    title(times2plot{count})
end

%% ACONVA model
regionName='exRareg_cumReward_alpha_P4';

tbl=scalpObject.scalpResults.sigValues.exRareg.cumReward;
aoctool(tbl.(regionName),tbl.ex_WS_RareG,tbl.group,0.05,regionName,'ex_WS_rareG','Group')
%%
title(regionName)

control_neural=tbl.(regionName)(strcmp(tbl.group,'Control'));
happened_neural=tbl.(regionName)(strcmp(tbl.group,'HappenedTo'));
control_beh=tbl.ex_WS_RareG(strcmp(tbl.group,'Control'));
happened_beh=tbl.ex_WS_RareG(strcmp(tbl.group,'HappenedTo'));

%witnessed_neural=tbl.(regionName)(strcmp(tbl.group,'Witnessed'));
%witnessed_beh=tbl.ex_WS_RareG(strcmp(tbl.group,'Witnessed'));

clc
figure
hold on
[r,p] = plotSpearmans(happened_neural,happened_beh,'r')
[r,p] = plotSpearmans(control_neural,control_beh,'b')
%[r,p] = plotSpearmans(witnessed_neural,witnessed_beh,'g')
xlabel(regionName,'fontweight','bold','fontsize',12);
ylabel(['Win Stay on High',newline, 'Expected Value Choices'],'fontweight','bold','fontsize',12);
[~, hobj, ~, ~] =legend('','Directly Exposed','','Control','','Witnessed','fontweight','bold','fontsize',9);
legend('boxoff')
hl = findobj(hobj,'type','line');
set(hl,'LineWidth', 2);
%% Source Analysis
% repeat general processing steps
sourceObject=SourceObject(project.sourceData, project.info, baselineTime, timeRange);
sourceObject = sourceObject.cleanDatasets(); 
sourceObject = sourceObject.standardProcessing();
sourceObject = sourceObject.SourceAnalysis();
sourceObject = sourceObject.calSigTbl();

%% Source Plotting
%sourceObject.plotNetwork(netwrk,vars2plot); % grouped network bar plots for specified measure
sourceObject.plotBrainmap('vars2plot',vars2plot,'freq2plot',freq2plot,'times2plot',times2plot,'combinations',[1,2]); % full roi plot for specified measure
%% Source Bar
close all
c = squeeze(nanmean(sourceObject.getGroupData('Control','exRareg','alpha','choice',48),3));
h = squeeze(nanmean(sourceObject.getGroupData('HappenedTo','exRareg','alpha','choice',48),3));

avgdata=[ nanmean(h) nanmean(c)];
semdata= [ nanstd(h)./sqrt(length(h)), nanstd(c)/sqrt(length(c)) ];
plotErrBar(avgdata,semdata)
[ngroups, nbars] = size(avgdata);
groupwidth = min(0.8, nbars/(nbars + 1.5));
combinations=[1,2];
for comb = 1:size(combinations, 1)
    [~,pvals(comb,:)]=ttest2(c,h);
    group1Location = (1:ngroups) - groupwidth/2 + (2*combinations(comb, 1)-1) * groupwidth / (2*nbars);
    group2Location = (1:ngroups) - groupwidth/2 + (2*combinations(comb, 2)-1) * groupwidth / (2*nbars);
    A=[group1Location;group2Location]';
    groupingKey = mat2cell(A, ones(1, size(A, 1)), size(A, 2));
    sigstar(groupingKey,pvals(comb,:))
end
xlim([0.5,1.5])
legend('Directly Exposes','Other','box','off','fontweight','bold','fontsize',9)
title('Right Posterior Cingulate')

set(gca,'xticklabels','')


%% Source Behavior Model
neuralVar={'exRareg'};
baseModel="ex_WS_RareG ~ 1 + age +group+"; keyColumnName='Subject';
sourceObject=sourceObject.NeurBehMdl(neuralVar,behTbl,keyColumnName,baseModel,'ex_WS_RareG_linear');

baseModel="ex_WS_RareG ~ 1 + age +group*"; keyColumnName='Subject';
sourceObject=sourceObject.NeurBehMdl(neuralVar,behTbl,keyColumnName,baseModel,'ex_WS_RareG_combo');

%fdr(sourceObject.sourceResults.sigROIsP.exRareg.all.alpha(:,end))
sourceObject.neuralBehMdl.ex_WS_RareG_linear = extractp(sourceObject.neuralBehMdl.ex_WS_RareG_linear_exRareg,'',0);
sourceObject.neuralBehMdl.ex_WS_RareG_combo = extractp(sourceObject.neuralBehMdl.ex_WS_RareG_combo_exRareg,"group_Control:",0);
%sourceObject.neuralBehMdl.ex_WS_RareG_combo = extractp(sourceObject.neuralBehMdl.ex_WS_RareG_combo_exRareg,"group_HappenedTo:");

%% 
sourceChoicetbl = sourceObject.sourceResults.sigValues.exRareg.choice;
source_mdl=sourceObject.neuralBehMdl.ex_WS_RareG_linear.model{1};

scalpChoicetbl = scalpObject.sigValues.exRareg.choice;
scalp_mdl=scalpObject.neuralBehMdl.ex_WS_RareG_combo.model{1};

%% Final Figures
close all
var1=scalpChoicetbl.exRareg_choice_alpha_Pz;
var2=scalpChoicetbl.ex_WS_RareG;
P=polyfit(var1,var2,1);
Bfit=polyval(P,var1);
hold on
plot(var1,var2,'b.')
plot(var1,Bfit,'r-')
hold off
axis square
title('ex WS RareG','fontweight','bold')
xlabel('Average alpha Pz during Choice period')
[r,p]=corr(var1,var2,'Type','Spearman','Rows','Complete')

%%
sourceChoicetbl;
mdlCon=fitlm(scalpChoicetbl(strcmp(sourceChoicetbl.group,'Control'),:),"ex_WS_RareG ~ 1 + age +exRareg_choice_alpha_Pz",'RobustOpts','on');
mdlHap=fitlm(scalpChoicetbl(strcmp(sourceChoicetbl.group,'HappenedTo'),:),"ex_WS_RareG ~ 1 + age +exRareg_choice_alpha_Pz",'RobustOpts','on');
close all
h1 = plot(mdlCon); % h1 contains the lines for model 1
set(h1(1),'Color','r'); % make data line for model 1 green
set(h1(2:end),'Color','r'); % make fit and confidence lines for model 1 cyan
hold on
h2 = plot(mdlHap); % h2 contains the lines for model 2
set(h2(1),'Color','b'); % make data line for model 2 orange
set(h2(2:end),'Color','b'); % make fit and confidence lines for model 2 magenta
legend([h1(1); h2(1)],{'Control','Happenedto'});
title('scalp Pz fitlm for groups seperatly')
%% Custom Neural Beh models
% 
% varNames={'exRareg_all_alpha_frontal','exRareg_all_alpha_parietal'};
% baseModel="ex_WS_RareG ~ 1 +  age +group+"; keyColumnName='Subject';
% 
% neural_beh_tbl=table();
% pvals=[];
% for i=1:length(varNames)
%     modelDef =  baseModel+varNames{i};
%     model = fitlm(tbldata,modelDef,'RobustOpts','on')
%     pvals(i) = model.Coefficients.pValue(end); % Check here to make sure its always the second
% end
% neural_beh_tbl.(baseModel)=varNames';
% neural_beh_tbl.p=pvals';
% neural_beh_tbl(neural_beh_tbl.p>0.05,:)=[];
% 
% %% Analysis of covariance
% close all
% aoctool(sourceChoicetbl.exRareg_choice_alpha_posteriorcingulateR,sourceChoicetbl.ex_WS_RareG,sourceChoicetbl.group,0.05,'pccR','ex_WS_rareG')
% aoctool(scalpChoicetbl.exRareg_choice_alpha_Pz,scalpChoicetbl.ex_WS_RareG,scalpChoicetbl.group,0.05,'Pz','ex_WS_rareG')
